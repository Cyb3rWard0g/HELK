# HELK process-ids-conversions filter conf
# HELK build Stage: Alpha
# Author: Nate Guagenti (@neu5ron) Roberto Rodriguez (@Cyb3rWard0g)
# License: GPL-3.0

filter {
  if [event_id] {
    if [process_id] =~ /^0x/ {
      mutate { add_field => { "z_logstash_pipeline" => "1542_1" } }
      mutate { gsub => [ "process_id", "0x", "" ]}
      ruby {
          code => "event.set('process_id', event.get('process_id').to_s.hex)"
          tag_on_exception =>  "_rubyexception_1542_1"
      }
    }
    if [parent_process_id] =~ /^0x/ {
      mutate { add_field => { "z_logstash_pipeline" => "1542_2" } }
      mutate { gsub => [ "parent_process_id", "0x", "" ]}
      ruby {
          code => "event.set('parent_process_id', event.get('parent_process_id').to_s.hex)"
          tag_on_exception =>  "_rubyexception_1542_2"
      }
    }
    if [process_target_id] =~ /^0x/ {
      mutate { add_field => { "z_logstash_pipeline" => "1542_3" } }
      mutate { gsub => [ "process_target_id", "0x", "" ]}
      ruby {
          code => "event.set('process_target_id', event.get('process_target_id').to_s.hex)"
          tag_on_exception =>  "_rubyexception_1542_3"
      }
    }
    if [process_granted_access] =~ /^0x/ {
      mutate {
        gsub => [ "process_granted_access", "0x", "" ]
        add_field => { "z_logstash_pipeline" => "process_granted_access_hex2dec" }
      }
      ruby {
          code => "event.set('process_granted_access', event.get('process_granted_access').to_s.hex)"
          tag_on_exception =>  "_rubyexception_process_granted_access_hex2dec"
      }
    }
  }
}
