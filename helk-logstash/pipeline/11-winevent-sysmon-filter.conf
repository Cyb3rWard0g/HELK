
# HELK sysmon filter conf file
# HELK build version: 0.9 (Alpha)
# Author: Roberto Rodriguez (@Cyb3rWard0g)
# License: BSD 3-Clause
filter {
# Tag AnyConnect_Dst adr
cidr {
    add_field => { "IP_Destination" => "VPN_client_IP" }
    address => [ "%{[event_data][DestinationIp]}" ]
    network => [ "ADD YOUR IP RANGES INTERNAL VLANS" ]
    }
# Tag Anyconnect_Src adr
cidr {
    add_field => { "IP_Source" => "VPN_client_IP" }
    address => [ "%{[event_data][SourceIp]}" ]
    network => [ "ADD YOUR IP RANGES INTERNAL VLANS" ]
    }
# Tag DMZ_server_Dst adr
cidr {
    add_field => { "IP_Destination" => "DMZ_server_IP" }
    address => [ "%{[event_data][DestinationIp]}" ]
    network => [ "ADD YOUR IP RANGES INTERNAL VLANS" ]
    }
# Tag DMZ_server_Src adr
cidr {
    add_field => { "IP_Source" => "DMZ_server_IP" }
    address => [ "%{[event_data][SourceIp]}" ]
    network => [ "ADD YOUR IP RANGES INTERNAL VLANS" ]
    }
# Tag clientip adr
cidr {
    add_field => { "IP_Destination" => "ClientIP" }
    address => [ "%{[event_data][DestinationIp]}" ]
    network => [ "ADD YOUR IP RANGES INTERNAL VLANS" ]
    }
# Tag clientip _src adr
cidr {
    add_field => { "IP_Source" => "ClientIP" }
    address => [ "%{[event_data][SourceIp]}" ]
    network => [ "ADD YOUR IP RANGES INTERNAL VLANS" ]
    }
# Tag serverip_Dst adr
cidr {
    add_field => { "IP_Destination" => "Server_IP" }
    address => [ "%{[event_data][DestinationIp]}" ]
    network => [ "ADD YOUR IP RANGES INTERNAL VLANS" ]
    }
# Tag serverip_Src adr
cidr {
    add_field => { "IP_Source" => "Server_IP" }
    address => [ "%{[event_data][SourceIp]}" ]
    network => [ "ADD YOUR IP RANGES INTERNAL VLANS" ]
    }
# Tag private ip adr
cidr {
    add_field => { "IP_Destination" => "Private_IP" }
    address => [ "%{[event_data][DestinationIp]}" ]
    network => [ "ADD YOUR IP RANGES INTERNAL VLANS" ]
  }
# Tag MS ip adr
cidr {
    add_field => { "IP_Destination" => "Microsoft_global_ip_adr" }
    address => [ "%{[event_data][DestinationIp]}" ]
    network => [ "13.104.0.0/14",
"13.64.0.0/11",
"13.96.0.0/13",
"20.160.0.0/12",
"20.180.0.0/14",
"20.184.0.0/13",
"23.38.0.0/14",
"23.96.0.0/14",
"23.67.0.0/14",
"40.64.0.0/10",
"42.159.0.0/16",
"51.140.0.0/14",
"51.144.0.0/14",
"51.4.0.0/15",
"51.51.0.0/16",
"51.8.0.0/16",
"52.112.0.0/14",
"52.120.0.0/14",
"52.125.0.0/16",
"52.126.0.0/15",
"52.130.0.0/15",
"52.136.0.0/13",
"52.145.0.0/16",
"52.146.0.0/15",
"52.148.0.0/14",
"52.152.0.0/13",
"52.160.0.0/11",
"52.224.0.0/11",
"52.96.0.0/12",
"64.4.0.0/18",
"65.52.0.0/14",
"66.119.144.0/20",
"70.37.0.0/17",
"70.37.128.0/18",
"91.190.216.0/21",
"94.245.64.0/18",
"103.25.156.0/24",
"103.25.157.0/24",
"103.25.158.0/23",
"103.255.140.0/22",
"103.36.96.0/22",
"103.9.8.0/22",
"104.146.0.0/15",
"104.208.0.0/13",
"104.40.0.0/13",
"111.221.16.0/20",
"111.221.64.0/18",
"129.75.0.0/16",
"131.253.1.0/24",
"131.253.12.0/22",
"131.253.128.0/17",
"131.253.16.0/23",
"131.253.18.0/24",
"131.253.21.0/24",
"131.253.22.0/23",
"131.253.24.0/21",
"131.253.3.0/24",
"131.253.32.0/20",
"131.253.5.0/24",
"131.253.6.0/24",
"131.253.61.0/24",
"131.253.62.0/23",
"131.253.64.0/18",
"131.253.8.0/24",
"132.245.0.0/16",
"134.170.0.0/16",
"134.177.0.0/16",
"137.116.0.0/15",
"137.135.0.0/16",
"138.196.0.0/16",
"138.91.0.0/16",
"139.217.0.0/16",
"139.219.0.0/16",
"141.251.0.0/16",
"146.147.0.0/16",
"150.171.0.0/16",
"150.242.48.0/22"
"152.199.19.0/24",
"152.199.20.0/24",
"157.54.0.0/15",
"157.56.0.0/14",
"157.60.0.0/16",
"167.220.0.0/16",
"168.61.0.0/16",
"168.62.0.0/15",
"191.232.0.0/13",
"192.197.157.0/24",
"192.32.0.0/16",
"192.48.225.0/24",
"192.84.159.0/24",
"192.84.160.0/23",
"193.149.64.0/19",
"193.221.113.0/24",
"194.110.197.0/24",
"198.105.232.0/22",
"198.200.130.0/24",
"198.206.164.0/24",
"198.49.8.0/24",
"199.103.122.0/24",
"199.103.90.0/23",
"199.242.32.0/20",
"199.242.48.0/21",
"199.60.28.0/24",
"199.74.210.0/24",
"2001:4898::/32",
"2001:489a:2000::/35",
"2001:67c:1020::/48",
"2001:df0:7::/48",
"2001:df0:d7::/48",
"2001:df0:d8::/48",
"2001:df0:d9::/48",
"202.89.224.0/20",
"204.13.120.0/21",
"204.14.180.0/22",
"204.152.140.0/23",
"204.152.18.0/23",
"204.231.192.0/24",
"204.231.194.0/23",
"204.231.197.0/24",
"204.231.198.0/23",
"204.231.200.0/21",
"204.231.208.0/20",
"204.231.236.0/24",
"204.79.135.0/24",
"204.79.179.0/24",
"204.79.181.0/24",
"204.79.188.0/24",
"204.79.195.0/24",
"204.79.196.0/23",
"204.79.252.0/24",
"205.174.224.0/20",
"206.138.168.0/21",
"206.191.224.0/19",
"207.46.0.0/16",
"207.68.128.0/18",
"208.68.136.0/21",
"208.76.44.0/22",
"208.84.0.0/21",
"209.240.192.0/19",
"213.199.128.0/18",
"216.220.208.0/20",
"216.32.180.0/22",
"2404:f801::/32",
"2603:1000::/24",
"2620:0:30::/45",
"2620:10c:5000::/44",
"2620:1ec::/36",
"2801:80:1d0::/48",
"2a01:110::/32",
"2a01:111::/32",
"2a01:4180::/32" ]
  }

      
  if [log_name] == "Microsoft-Windows-Sysmon/Operational"{
    mutate {
      rename => {
        "[user][domain]" => "user_reporter_domain"
        "[user][identifier]" => "user_reporter_sid"
        "[user][name]" => "user_reporter_name"
        "[user][type]" => "user_reporter_type"
        "computer_name" => "host_name"
      }
    }
    if [provider_guid] {
      mutate {
        gsub => ["provider_guid","[{}]",""]
      }
    }
    if [event_data][Image] {
      if [event_data][Image] =~ /^(\w*$)|^(\w*\..*$)/ {
        mutate {
          copy => {"[event_data][Image]" => "process_name"}
        }
      }
      else {
        grok {
          match => { "[event_data][Image]" => ".*\\%{GREEDYDATA:process_name}" }
          tag_on_failure => [ "_grokparsefailure", "_parsefailure" ]
        }
      }
      mutate {
        rename => {
          "[event_data][Image]" => "process_path"
          "[event_data][ProcessGuid]" => "process_guid"
          "[event_data][ProcessId]" => "process_id"
        }
        gsub => ["process_guid","[{}]",""]
      }
    }
    if [event_data][ParentImage] {
      grok {
        match => { "[event_data][ParentImage]" => ".*\\%{GREEDYDATA:process_parent_name}" }
        tag_on_failure => [ "_grokparsefailure", "_parsefailure" ]
      }
    }
    if [event_data][Hashes] {
      kv {
        source => "[event_data][Hashes]"
        field_split => ","
        value_split => "="
        prefix => "hash_"
        transform_key => "lowercase"
      }
    }
    if [event_data][TargetImage] {
      grok { 
        match => { "[event_data][SourceImage]" => ".*\\%{GREEDYDATA:process_name}" }
        tag_on_failure => [ "_grokparsefailure", "_parsefailure" ]
      }
      grok { 
        match => { "[event_data][TargetImage]" => ".*\\%{GREEDYDATA:process_target_name}" }
        tag_on_failure => [ "_grokparsefailure", "_parsefailure" ]
      }
      mutate {
        rename => {
          "[event_data][SourceImage]" => "process_path"
          "[event_data][SourceProcessGUID]" => "process_guid"
          "[event_data][SourceProcessId]" => "process_id"
          "[event_data][TargetImage]" => "process_target_path"
          "[event_data][TargetProcessGUID]" => "process_target_guid"
          "[event_data][TargetProcessId]" => "process_target_id"
        }
        gsub => ["process_guid","[{}]",""]
        gsub => ["process_target_guid","[{}]",""]
      }
    }
    if [event_data][User] {
      grok {
        match => { "[event_data][User]" => "%{GREEDYDATA:user_domain}\\%{GREEDYDATA:user_name}" }
        tag_on_failure => [ "_grokparsefailure", "_parsefailure" ]
      }
    }
    if [event_data][LogonId] {
      mutate { rename => { "[event_data][LogonId]" => "user_logon_id" }}
      mutate { gsub => [ "user_logon_id", "0x", "" ]}
      ruby {
        code => "
          userlogonid = event.get('user_logon_id')
          userlogonid = userlogonid.hex
          event.set('user_logon_id', userlogonid)
        "
        tag_on_exception =>  "_0591_rubyexception"
      }
    }
    if [event_id] == 1 {
      mutate {
        add_field => { "action" => "processcreate" }
        rename => {
          "[event_data][CommandLine]" => "process_command_line"
          "[event_data][CurrentDirectory]" => "process_current_directory"
          "[event_data][ParentImage]" => "process_parent_path"
          "[event_data][ParentCommandLine]" => "process_parent_command_line"
          "[event_data][IntegrityLevel]" => "process_integrity_level"
          "[event_data][LogonGuid]" => "user_logon_guid"
          "[event_data][ParentProcessGuid]" => "process_parent_guid"
          "[event_data][ParentProcessId]" => "process_parent_id"
          "[event_data][TerminalSessionId]" => "user_terminal_session_id"
          "[event_data][FileVersion]" => "file_version"
          "[event_data][Description]" => "file_description"
          "[event_data][Product]" => "file_product"
          "[event_data][Company]" => "file_company"
        }
        gsub => ["process_parent_guid","[{}]",""]
        gsub => ["user_logon_guid","[{}]",""]
      }

######## IOC section #######  OFFICE SUITE ####   
if [process_parent_name] =~ /(?i)(OUTLOOK.EXE)/ and [process_name] =~ /(?i)(iexplore.exe|chrome.exe|firefox.exe|edge.exe)/ 
       {
       mutate {
               add_field => { "IOC" => "Browser Launched From Outlook Sysmon 1" }
    }
  }

if [process_parent_name] =~ /(?i)(OUTLOOK.EXE)/ and [process_name]  =~ /(?i)(psexec.exe|powershell.exe|wscript.exe|cmd.exe|taskeng.exe|cab.exe|java.exe|py.exe)/ 
       {
       mutate { 
              add_field => { "IOC" => "Powershell & Exes Launched From Outlook Sysmon 1" } 
    }
  }

if  [process_parent_name] =~ /(?i)(WINWORD.EXE)/ and [process_name] =~ /(?i)(.exe)/ 
       {
       mutate {
              add_field => { "IOC" =>  "Exes Launched From Word Sysmon 1"}
       }

   }

if  [process_parent_name] =~ /(?i)(WINWORD.EXE)/ and [process_name] =~ /(?i)(powershell.exe|wscript.exe|cmd.exe|taskeng.exe|cab.exe|java.exe|py.exe)/
       {
       mutate {
              add_field => { "IOC" =>  "Powershell & Exes Launched From Word Sysmon 1" }
      
    }
   }

if  [process_parent_name] =~ /(?i)(EXCEL.EXE)/ and [process_name] =~ /(?i)(psexec.exe|powershell.exe|wscript.exe|cmd.exe|taskeng.exe|cab.exe|java.exe|py.exe|.exe)/
       {
       mutate {
              add_field => { "IOC" =>  "Powershell & Exes Launched From EXCEL Sysmon 1" }
      
    }  
   }
if [process_parent_name] =~ /(?i)(EXCEL.EXE)/ and [process_name] =~ /(?i)(iexplore.exe|chrome.exe|firefox.exe|edge.exe)/ 
       {
       mutate {
              add_field => { "IOC" => "Browser Launched From EXCEL Sysmon 1" }
    }
  }

if  [process_parent_name] =~ /(?i)(POWERPNT.EXE)/ and [process_name] =~ /(?i)(psexec.exe|powershell.exe|wscript.exe|cmd.exe|taskeng.exe|cab.exe|java.exe|py.exe|.exe)/
       {
       mutate {
              add_field => { "IOC" =>  "Powershell & Exes Launched From POWERPOINT Sysmon 1" }
      
    }  
  }
if [process_parent_name] =~ /(?i)(POWERPNT.EXE)/ and [process_name] =~ /(?i)(iexplore.exe|chrome.exe|firefox.exe|edge.exe)/ 
       {
       mutate {
               add_field => { "IOC" => "Browser Launched From POWERPOINT Sysmon 1" }
    }
   }

 if [process_name] =~ /(?i)(powershell.exe)/ and [process_command_line] =~ /(?i)(hidden|ToBase64String|net.webclient.|IEX|DownloadString|Encodedoutput|invoke|IEX)/ 
       {
       mutate {
               add_field => { "IOC" => "Encoded and/or hidden Powershell execution Sysmon 1" }
    }
   }

 if [process_parent_command_line] =~ /(?i)(cmd.exe)/ and [process_command_line] =~ /(?i)(hidden|ToBase64String|net.webclient.|IEX|DownloadString|Encodedoutput|IEX|invoke)/ 
       {
       mutate {
               add_field => { "IOC" => "Encoded and/or hidden CMD -> Powershell execution Sysmon 1" }
    }
   }

 }
 

    if [event_id] == 2 {
      mutate {
        add_field => { "action" => "filecreatetime" }
        rename => {
          "[event_data][TargetFileName]" => "file_name"
        }
      }
    }
    if [event_id] == 3 {
      mutate {
        add_field => { "action" => "networkconnect" }
        rename => {
          "[event_data][DestinationHostname]" => "host_dst_name"
          "[event_data][DestinationIp]" => "ip_dst"
          "[event_data][DestinationIsIpv6]" => "ip_dst_isipv6"
          "[event_data][DestinationPort]" => "port_dst_number"
          "[event_data][DestinationPortName]" => "port_dst_name"
          "[event_data][Initiated]" => "network_initiated"
          "[event_data][Protocol]" => "network_protocol"
          "[event_data][SourceHostname]" => "host_src_name"
          "[event_data][SourceIp]" => "ip_src"
          "[event_data][SourceIsIpv6]" => "ip_src_isipv6"
          "[event_data][SourcePort]" => "port_src_number"
          "[event_data][SourcePortName]" => "port_src_port_name"
        }
      }
      geoip {
        source => "ip_dst"
        remove_field => "[geoip][ip]"
      }
    }
    if [event_id] == 4 {
      mutate {
        add_field => { "action" => "sysmonservicestatechanged" }
        rename => {
          "[event_data][State]" => "service_state"
          "[event_data][Version]" => "sysmon_version"
          "[event_data][SchemaVersion]" => "sysmon_schema_version"
        }
      }
    }
    if [event_id] == 6 {
      mutate {
        add_field => { "action" => "driverload" }
        rename => {
          "[event_data][ImageLoaded]" => "image_loaded"
          "[event_data][Signature]" => "image_signature"
          "[event_data][SignatureStatus]" => "image_signature_status"
          "[event_data][Signed]" => "image_signed"
        }
      }
    }
    if [event_id] == 7 {
      mutate {
        add_field => { "action" => "imageload" }
        rename => {
          "[event_data][ImageLoaded]" => "image_loaded"
          "[event_data][Signature]" => "image_signature"
          "[event_data][SignatureStatus]" => "image_signature_status"
          "[event_data][Signed]" => "image_signed"
        }
      }

    if [ImageLoaded] =~ /(?i)(.dll)/ and [process_name] =~ /(?i)(WINWORD.EXE|WORD.EXE|EXCEL.EXE|POWERPNT.EXE|OUTLOOK.EXE)/
       {
       mutate {
              add_field => { "IOC" => "DLL loaded from OFFICE SUITE sysmon 7" }
    }
  }

    }
    if [event_id] == 8 {
      mutate {
        add_field => { "action" => "createremotethread" }
        rename => {
          "[event_data][NewThreadId]" => "thread_new_id"
          "[event_data][StartAddress]" => "thread_startaddress"
          "[event_data][StartFunction]" => "thread_startfunction"
          "[event_data][StartModule]" => "thread_startmodule"
        }
      }
    }
    if [event_id] == 9 {
      mutate {
        add_field => { "action" => "rawaccessread" }
        rename => {
          "[event_data][Device]" => "device_name"
        }
      }
    }
    if [event_id] == 10 {
      mutate {
        add_field => { "action" => "processaccess" }
        rename => {
          "[event_data][CallTrace]" => "process_calltrace"
          "[event_data][GrantedAccess]" => "process_granted_access"
          "[event_data][SourceThreadId]" => "process_thread_id"
        }
      }
    }
    if [event_id] == 11 {
      mutate {
        add_field => { "action" => "filecreate" }
        rename => {
          "[event_data][TargetFilename]" => "file_name"
        }
      }
#### IOC ##### FILECREATE ######    
    if [process_name] =~ /(?i)(iexplore.exe|chrome.exe|firefox.exe|edge.exe)/ 
       {
       mutate {
               add_field => { "IOC" => "File Created from Web Browser Sysmon 11" }

    }
  }

    if [process_name] =~ /(?i)(WINWORD.EXE|OUTLOOK.EXE|EXCEL.EXE|POWERPNT.EXE)/ 
       {
       mutate {
               add_field => { "IOC" => "File Created From OFFICE SUITE Sysmon 11" }
    }
  }

    if [process_name] =~ /(?i)(AcroRd.exe)/  
       {
       mutate {
               add_field => { "IOC" => "File Created From Adobe Acrobat Sysmon 11" }
    }
  }

   }
#### IOC END ####
    if [event_id] == 12 or [event_id] == 13 or [event_id] == 14 {
      mutate {
        add_field => { "action" => "registryevent" }
        rename => {
          "[event_data][EventType]" => "registry_event_type"
          "[event_data][TargetObject]" => "registry_key_path"
          "[event_data][Details]" => "registry_key_value"
        }
      }
    }
    if [event_id] == 15 {
      mutate {
        add_field => { "action" => "filecreatestreamhash" }
        rename => {
          "[event_data][TargetFilename]" => "file_name"
          "[event_data][Hash]" => "hash"
        }
      }
#### IOC ####  FILECREATESTREAMHASH ####  
   if [process_name] =~ /(?i)(OUTLOOK.EXE)/ 
       {
       mutate {
               add_field => { "IOC" => "File Created From OUTLOOK Sysmon 15" }
    }
  }

   if [process_name] =~ /(?i)(WINWORD.EXE|WORD.EXE)/ 
       {
       mutate {
               add_field => { "IOC" => "File Created From WORD Sysmon 15" }
    }
  }

    if [process_name] =~ /(?i)(powershell.exe|cmd.exe|psexec.exe|ps.exe)/ 
 
       {
       mutate {
               add_field => { "IOC" => "File Created commandline (PS,CMD,PSEXEC) Sysmon 15" }
    }
  }

  if [process_name] =~ /(?i)(firefox.exe|chrome.exe|iexplorer.exe|edge.exe)/ 
     {
     mutate {
            add_field => { "IOC" => "File Created From Webbrowser Sysmon 15" }
    }
  }
 }
#### IOC END ####

    if [event_id] == 16 {
      kv {
        source => "[event_data][ConfigurationFileHash]"
        value_split => "="
        prefix => "sysmon_config_hash_"
        transform_key => "lowercase"
      }
      mutate {
        add_field => { "action" => "sysmonconfigstatechanged" }
        rename => {
          "[event_data][State]" => "sysmon_config_state"
          "[event_data][Configuration]" => "sysmon_config"
        }
      }
    }
    if [event_id] == 18 or [event_id] == 17 {
      mutate {
        add_field => { "action" => "pipeevent" }
        rename => {
          "[event_data][PipeName]" => "pipe_name"
        }
      }
    }
    if [event_id] == 19 or [event_id] == 20 or [event_id] == 21 {
      mutate {
        add_field => { "action" => "wmievent" }
        rename => {
          "[event_data][EventType]" => "wmi_event_type"
          "[event_data][Operation]" => "wmi_operation"
          "[event_data][EventNamespace]" => "wmi_namespace"
          "[event_data][Name]" => "wmi_name"
          "[event_data][Query]" => "wmi_query"
          "[event_data][Type]" => "wmi_type"
          "[event_data][Destination]" => "wmi_destination"
        }
      }
    }
    date {
			timezone => "UTC"
      match => [ "[event_data][UtcTime]", "YYYY-MM-dd HH:mm:ss.SSS" ]
      tag_on_failure => [ "_sysmon_datefailure", "_dateparsefailure" ]
    }
    date {
        timezone => "UTC"
        match => [ "[event_data][CreationUtcTime]", "YYYY-MM-dd HH:mm:ss.SSS" ]
        target => "@date_creation"
        tag_on_failure => [ "_sysmon_datefailure", "_dateparsefailure" ]
    }
    date {
      timezone => "UTC"
      match => [ "[event_data][PreviousCreationUtcTime]", "YYYY-MM-dd HH:mm:ss.SSS" ]
      target => "@date_creation_previous"
      tag_on_failure => [ "_sysmon_datefailure", "_dateparsefailure" ]
    }
    mutate {
      remove_field => "[event_data]"
      remove_field => "message"
      remove_field => "[event_data][Hashes]"
      remove_field => "[event_data][ConfigurationFileHash]"
      remove_field => "[event_data][UtcTime]"
      remove_field => "[event_data][CreationUtcTime]"
      remove_field => "[event_data][PreviousCreationUtcTime]"
      remove_field => "[user]"
    }
  }
}

